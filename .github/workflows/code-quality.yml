name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

permissions:
  contents: read
  security-events: write

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lighthouse:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1
        with:
          install-dependencies: true

      - name: Verify Chrome installation
        run: |
          echo "Verifying Chrome installation..."
          CHROME_PATH="${{ steps.setup-chrome.outputs.chrome-path }}"
          echo "Chrome path: $CHROME_PATH"

          if [ -f "$CHROME_PATH" ]; then
            echo "✅ Chrome binary found"
            $CHROME_PATH --version || echo "⚠️  Could not get Chrome version"
          else
            echo "❌ Chrome binary not found at expected path"
            exit 1
          fi

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

      - name: Run Lighthouse CI
        run: |
          echo "🚀 Running Lighthouse CI..."
          echo "Chrome path: $CHROME_PATH"
          echo "Node version: $(node --version)"
          echo "Chrome version: $($CHROME_PATH --version 2>/dev/null || echo 'Chrome version not detected')"

          # Add some debug info
          echo "Available memory:"
          free -h || true
          echo "Available disk space:"
          df -h . || true

          echo "Starting Lighthouse CI autorun..."
          set -e
          npx --yes @lhci/cli@latest autorun --config=./lighthouserc.json || {
            echo "❌ Lighthouse CI failed. Checking for debugging info..."
            
            # Check if there are any lighthouse reports
            if [ -d ".lighthouseci" ]; then
              echo "📋 Lighthouse CI directory contents:"
              ls -la .lighthouseci/ || true
              
              # Show any error logs if they exist
              if [ -f ".lighthouseci/lhci_reports/manifest.json" ]; then
                echo "📊 Lighthouse reports manifest:"
                cat .lighthouseci/lhci_reports/manifest.json || true
              fi
            fi
            
            # Check if server is still running
            echo "🔍 Checking if any servers are running on common ports:"
            netstat -tlnp 2>/dev/null | grep -E ':(4173|8080|3000|5000)' || echo "No servers found on common ports"
            
            exit 1
          }

          echo "✅ Lighthouse CI completed successfully!"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          CHROME_PATH: ${{ steps.setup-chrome.outputs.chrome-path }}
          DEBUG: 'lhci:*'

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build with bundle analysis
        run: |
          pnpm build
          # Add bundle analyzer when configured
          echo "Bundle analysis would run here with vite-bundle-analyzer or similar"

      - name: Comment bundle size
        if: github.event_name == 'pull_request'
        run: |
          # This would analyze bundle size changes in PRs
          echo "Bundle size analysis would be posted as PR comment"
